// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneManager.Models;

#nullable disable

namespace PhoneManager.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220829184313_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PhoneManager.Models.Entities.Call", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CallEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CallStart")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CallerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubscriberId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CallerId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("PhoneManager.Models.Entities.Conference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Conferences");
                });

            modelBuilder.Entity("PhoneManager.Models.Entities.ConferenceContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConferenceId");

                    b.HasIndex("ContactId");

                    b.ToTable("ConferenceContacts");
                });

            modelBuilder.Entity("PhoneManager.Models.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PhoneNumberId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumberId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("PhoneManager.Models.Entities.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("PhoneManager.Models.Entities.Call", b =>
                {
                    b.HasOne("PhoneManager.Models.Entities.Contact", "Caller")
                        .WithMany()
                        .HasForeignKey("CallerId");

                    b.HasOne("PhoneManager.Models.Entities.Contact", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId");

                    b.Navigation("Caller");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("PhoneManager.Models.Entities.ConferenceContact", b =>
                {
                    b.HasOne("PhoneManager.Models.Entities.Conference", "Conference")
                        .WithMany()
                        .HasForeignKey("ConferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneManager.Models.Entities.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conference");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("PhoneManager.Models.Entities.Contact", b =>
                {
                    b.HasOne("PhoneManager.Models.Entities.PhoneNumber", "PhoneNumber")
                        .WithMany()
                        .HasForeignKey("PhoneNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
